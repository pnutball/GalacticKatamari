[gd_resource type="VisualShader" load_steps=29 format=3 uid="uid://dd7nnud13dehu"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_7cu71"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ccb6c"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_c35dg"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_68pgw"]
default_input_values = [0, 0.0, 1, 1.5]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_tav3x"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_36ga5"]
input_name = "velocity"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_x6q1s"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_i5f3w"]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ylo37"]
default_input_values = [0, 0.0, 1, 10.0]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xodrd"]
input_name = "delta"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_gffg6"]
parameter_name = "Size"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_dax4g"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_n5ma2"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sqsn0"]
default_input_values = [0, 0.0, 1, 0.65]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n4672"]
input_name = "delta"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pmu7g"]
input_name = "custom"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_qxlx6"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_81i4q"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hycud"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_d6thi"]
parameter_name = "Size"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_qwo1x"]
constant = Vector3(0, 3.4, 0)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r3ckd"]
input_name = "index"

[sub_resource type="VisualShaderNodeParticleMultiplyByAxisAngle" id="VisualShaderNodeParticleMultiplyByAxisAngle_0u6en"]
default_input_values = [1, Vector3(0, 1, 0), 2, 0.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0ul36"]
default_input_values = [0, 0.0, 1, 45.0]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_dws48"]
constant = Vector3(0.3, 0, 0)

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_2e1hb"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_virr8"]
constant = 8.0

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_d8ggr"]

[resource]
code = "shader_type particles;
uniform float Size = 1;


float __rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float __rand_from_seed_m1_p1(inout uint seed) {
	return __rand_from_seed(seed) * 2.0 - 1.0;
}

float __randf_range(inout uint seed, float from, float to) {
	return __rand_from_seed(seed) * (to - from) + from;
}

uint __hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

mat3 __build_rotation_mat3(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat3(vec3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s), vec3(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s), vec3(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c));
}

mat4 __build_rotation_mat4(vec3 axis, float angle) {
	axis = normalize(axis);
	float s = sin(angle);
	float c = cos(angle);
	float oc = 1.0 - c;
	return mat4(vec4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0), vec4(oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0), vec4(oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0), vec4(0, 0, 0, 1));
}

vec2 __get_random_unit_vec2(inout uint seed) {
	return normalize(vec2(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

vec3 __get_random_unit_vec3(inout uint seed) {
	return normalize(vec3(__rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed), __rand_from_seed_m1_p1(seed)));
}

void start() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// Vector3Constant:7
		vec3 n_out7p0 = vec3(0.300000, 0.000000, 0.000000);


// Input:3
		uint n_out3p0 = INDEX;


// FloatOp:6
		float n_in6p1 = 45.00000;
		float n_out6p0 = float(n_out3p0) * n_in6p1;


// MultiplyByAxisAngle:4
		vec3 n_in4p1 = vec3(0.00000, 1.00000, 0.00000);
		vec3 n_out4p0 = __build_rotation_mat3(n_in4p1, radians(n_out6p0)) * n_out7p0;


// FloatConstant:9
		float n_out9p0 = 8.000000;


// Vector3Constant:12
		vec3 n_out12p0 = vec3(0.000000, 3.400000, 0.000000);


// MultiplyAdd:8
		vec3 n_out8p0 = fma(n_out4p0, vec3(n_out9p0), n_out12p0);


// StartOutput:0
		VELOCITY = n_out8p0;
		if (RESTART_POSITION) {
			TRANSFORM = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(n_out4p0, 1.0));
			if (RESTART_VELOCITY) {
				VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
			}
			TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		}


	}
	
	{
// Vector3Constant:2
		vec3 n_out2p0 = vec3(0.000000, 0.000000, 0.000000);


// CustomStartOutput:0
		CUSTOM.rgb = n_out2p0;


	}
}

void process() {
	uint __seed = __hash(NUMBER + uint(1) + RANDOM_SEED);

	{
// Input:2
		vec3 n_out2p0 = VELOCITY;


// VectorDecompose:3
		float n_out3p0 = n_out2p0.x;
		float n_out3p1 = n_out2p0.y;
		float n_out3p2 = n_out2p0.z;


// VectorCompose:10
		vec2 n_out10p0 = vec2(n_out3p0, n_out3p2);


// Input:6
		float n_out6p0 = DELTA;


// FloatOp:13
		float n_in13p1 = 1.50000;
		float n_out13p0 = n_out6p0 * n_in13p1;


// VectorOp:12
		vec2 n_out12p0 = n_out10p0 * vec2(n_out13p0);


// VectorOp:11
		vec2 n_out11p0 = n_out10p0 - n_out12p0;


// VectorDecompose:14
		float n_out14p0 = n_out11p0.x;
		float n_out14p1 = n_out11p0.y;


// ParameterRef:7
		float n_out7p0 = Size;


// FloatOp:5
		float n_in5p1 = 10.00000;
		float n_out5p0 = n_out7p0 * n_in5p1;


// FloatOp:9
		float n_out9p0 = n_out5p0 * n_out6p0;


// FloatOp:4
		float n_out4p0 = n_out3p1 - n_out9p0;


// VectorCompose:8
		vec3 n_out8p0 = vec3(n_out14p0, n_out4p0, n_out14p1);


// ProcessOutput:0
		VELOCITY = n_out8p0;


	}
	
	{
// Input:12
		float n_out12p0 = DELTA;


// FloatOp:10
		float n_in10p1 = 0.65000;
		float n_out10p0 = n_out12p0 / n_in10p1;


// Input:2
		vec4 n_out2p0 = CUSTOM;


// VectorDecompose:3
		float n_out3p0 = n_out2p0.x;
		float n_out3p1 = n_out2p0.y;
		float n_out3p2 = n_out2p0.z;
		float n_out3p3 = n_out2p0.w;


// FloatOp:9
		float n_out9p0 = n_out10p0 + n_out3p1;


// VectorCompose:8
		float n_in8p0 = 0.00000;
		float n_in8p2 = 0.00000;
		vec3 n_out8p0 = vec3(n_in8p0, n_out9p0, n_in8p2);


// CustomProcessOutput:0
		CUSTOM.rgb = n_out8p0;


	}
}

"
graph_offset = Vector2(-186.613, -94.1268)
mode = 2
flags/collision_use_scale = false
flags/disable_force = false
flags/disable_velocity = false
flags/keep_data = false
nodes/start/0/position = Vector2(520, -20)
nodes/start/3/node = SubResource("VisualShaderNodeInput_r3ckd")
nodes/start/3/position = Vector2(-400, 140)
nodes/start/4/node = SubResource("VisualShaderNodeParticleMultiplyByAxisAngle_0u6en")
nodes/start/4/position = Vector2(40, 40)
nodes/start/6/node = SubResource("VisualShaderNodeFloatOp_0ul36")
nodes/start/6/position = Vector2(-120, 140)
nodes/start/7/node = SubResource("VisualShaderNodeVec3Constant_dws48")
nodes/start/7/position = Vector2(-340, 20)
nodes/start/8/node = SubResource("VisualShaderNodeMultiplyAdd_2e1hb")
nodes/start/8/position = Vector2(340, -140)
nodes/start/9/node = SubResource("VisualShaderNodeFloatConstant_virr8")
nodes/start/9/position = Vector2(100, -200)
nodes/start/11/node = SubResource("VisualShaderNodeFloatParameter_d6thi")
nodes/start/11/position = Vector2(-680, -260)
nodes/start/12/node = SubResource("VisualShaderNodeVec3Constant_qwo1x")
nodes/start/12/position = Vector2(-160, -100)
nodes/start/connections = PackedInt32Array(6, 0, 4, 2, 3, 0, 6, 0, 4, 0, 0, 4, 7, 0, 4, 0, 4, 0, 8, 0, 8, 0, 0, 1, 9, 0, 8, 1, 12, 0, 8, 2)
nodes/process/0/position = Vector2(1080, 220)
nodes/process/2/node = SubResource("VisualShaderNodeInput_36ga5")
nodes/process/2/position = Vector2(-280, 100)
nodes/process/3/node = SubResource("VisualShaderNodeVectorDecompose_x6q1s")
nodes/process/3/position = Vector2(-20, 100)
nodes/process/4/node = SubResource("VisualShaderNodeFloatOp_i5f3w")
nodes/process/4/position = Vector2(360, 260)
nodes/process/5/node = SubResource("VisualShaderNodeFloatOp_ylo37")
nodes/process/5/position = Vector2(-160, 180)
nodes/process/6/node = SubResource("VisualShaderNodeInput_xodrd")
nodes/process/6/position = Vector2(-240, 340)
nodes/process/7/node = SubResource("VisualShaderNodeParameterRef_gffg6")
nodes/process/7/position = Vector2(-400, 200)
nodes/process/8/node = SubResource("VisualShaderNodeVectorCompose_dax4g")
nodes/process/8/position = Vector2(840, 220)
nodes/process/9/node = SubResource("VisualShaderNodeFloatOp_n5ma2")
nodes/process/9/position = Vector2(40, 240)
nodes/process/10/node = SubResource("VisualShaderNodeVectorCompose_7cu71")
nodes/process/10/position = Vector2(180, 360)
nodes/process/11/node = SubResource("VisualShaderNodeVectorOp_ccb6c")
nodes/process/11/position = Vector2(520, 420)
nodes/process/12/node = SubResource("VisualShaderNodeVectorOp_c35dg")
nodes/process/12/position = Vector2(360, 540)
nodes/process/13/node = SubResource("VisualShaderNodeFloatOp_68pgw")
nodes/process/13/position = Vector2(120, 520)
nodes/process/14/node = SubResource("VisualShaderNodeVectorDecompose_tav3x")
nodes/process/14/position = Vector2(660, 360)
nodes/process/connections = PackedInt32Array(7, 0, 5, 0, 4, 0, 8, 1, 5, 0, 9, 0, 6, 0, 9, 1, 9, 0, 4, 1, 8, 0, 0, 1, 10, 0, 11, 0, 10, 0, 12, 0, 13, 0, 12, 1, 6, 0, 13, 0, 12, 0, 11, 1, 11, 0, 14, 0, 14, 0, 8, 0, 14, 1, 8, 2, 2, 0, 3, 0, 3, 1, 4, 0, 3, 0, 10, 0, 3, 2, 10, 1)
nodes/start_custom/2/node = SubResource("VisualShaderNodeVec3Constant_d8ggr")
nodes/start_custom/2/position = Vector2(40, 140)
nodes/start_custom/connections = PackedInt32Array(2, 0, 0, 0)
nodes/process_custom/0/position = Vector2(660, 140)
nodes/process_custom/2/node = SubResource("VisualShaderNodeInput_pmu7g")
nodes/process_custom/2/position = Vector2(-240, 140)
nodes/process_custom/3/node = SubResource("VisualShaderNodeVectorDecompose_qxlx6")
nodes/process_custom/3/position = Vector2(60, 140)
nodes/process_custom/8/node = SubResource("VisualShaderNodeVectorCompose_81i4q")
nodes/process_custom/8/position = Vector2(480, 120)
nodes/process_custom/9/node = SubResource("VisualShaderNodeFloatOp_hycud")
nodes/process_custom/9/position = Vector2(300, 60)
nodes/process_custom/10/node = SubResource("VisualShaderNodeFloatOp_sqsn0")
nodes/process_custom/10/position = Vector2(120, -40)
nodes/process_custom/12/node = SubResource("VisualShaderNodeInput_n4672")
nodes/process_custom/12/position = Vector2(-160, -40)
nodes/process_custom/connections = PackedInt32Array(2, 0, 3, 0, 8, 0, 0, 0, 3, 1, 9, 1, 9, 0, 8, 1, 10, 0, 9, 0, 12, 0, 10, 0)
