[gd_scene load_steps=68 format=3 uid="uid://b71c6sh4m0f5e"]

[ext_resource type="Script" path="res://scripts/katamari_controllable.gd" id="1_k6077"]
[ext_resource type="Curve" uid="uid://cqv88nsvwy1k" path="res://data/katamari_physics_curve.tres" id="2_dth00"]
[ext_resource type="AudioStream" uid="uid://cfvbie78fey30" path="res://assets/sounds/game/scale_up.wav" id="3_xj4r4"]
[ext_resource type="Script" path="res://scripts/Feedback.gd" id="4_ujqm4"]
[ext_resource type="ArrayMesh" uid="uid://b3d1u1ws4oeus" path="res://assets/models/core/core_generic.obj" id="5_mqsmu"]
[ext_resource type="Texture2D" uid="uid://dg5j6njuk2bjb" path="res://assets/textures/effect/dash_A.png" id="6_8pgql"]
[ext_resource type="Shader" path="res://assets/materials/shaders/KDZoom.gdshader" id="6_rnc8v"]
[ext_resource type="Texture2D" uid="uid://bxcxru2mxjxbs" path="res://assets/textures/effect/dash_B.png" id="7_kpo2d"]
[ext_resource type="Texture2D" uid="uid://8i4cvqk35qcq" path="res://assets/textures/effect/bound.png" id="8_sly4x"]
[ext_resource type="Texture2D" uid="uid://ddhgqxa1uojmq" path="res://assets/textures/ui/back_earth.png" id="8_un6lr"]
[ext_resource type="PackedScene" uid="uid://ddvym7hjeiewb" path="res://assets/ouji/rig/Ouji01.tscn" id="9_uov0o"]
[ext_resource type="AnimationLibrary" uid="uid://bhwfupvw4lfhs" path="res://assets/animations/ouji.res" id="10_li762"]

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_qviqp"]
dof_blur_far_enabled = true
dof_blur_far_distance = 20.0
dof_blur_amount = 0.3

[sub_resource type="Animation" id="Animation_vc1w8"]
resource_name = "CameraZoom"
length = 2.89
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/path = NodePath("../../../ViewportRect:material:shader_parameter/zoom_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 1.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 0.065, 0.0]
}
tracks/1/type = "audio"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("%KatamariZoomAudio")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"clips": [{
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource("3_xj4r4")
}],
"times": PackedFloat32Array(0)
}
tracks/1/use_blend = true
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("%ViewportRect:material:shader_parameter/FX_opacity")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.1, 1.3, 1.8),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.9, 0.9, 0.0]
}

[sub_resource type="Animation" id="Animation_dopje"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../ViewportRect:material:shader_parameter/zoom_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("%ViewportRect:material:shader_parameter/FX_opacity")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hdva6"]
_data = {
"CameraZoom": SubResource("Animation_vc1w8"),
"RESET": SubResource("Animation_dopje")
}

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_tecj2"]
resource_local_to_scene = true
friction = 0.08
bounce = 0.4

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_xaky2"]
texture_filter = 2

[sub_resource type="SphereShape3D" id="SphereShape3D_5e5bl"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7w1i5"]
blend_mode = 1
depth_draw_mode = 2
shading_mode = 0
albedo_color = Color(0, 0, 0, 1)
albedo_texture = ExtResource("6_8pgql")

[sub_resource type="SphereMesh" id="SphereMesh_78fgn"]
radius = 0.56
height = 1.12
radial_segments = 32
rings = 16

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_0uvt6"]
blend_mode = 1
depth_draw_mode = 2
shading_mode = 0
albedo_color = Color(0, 0, 0, 1)
albedo_texture = ExtResource("7_kpo2d")

[sub_resource type="SphereShape3D" id="SphereShape3D_qrq08"]
radius = 0.35

[sub_resource type="Shader" id="Shader_s032g"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.stable's ParticleProcessMaterial.

shader_type particles;
render_mode disable_velocity;
uniform vec3 direction;
uniform float spread;
uniform float flatness;
uniform float inherit_emitter_velocity_ratio = 0;
uniform float initial_linear_velocity_min;
uniform float initial_linear_velocity_max;
uniform float directional_velocity_min;
uniform float directional_velocity_max;
uniform float angular_velocity_min;
uniform float angular_velocity_max;
uniform float orbit_velocity_min;
uniform float orbit_velocity_max;
uniform float radial_velocity_min;
uniform float radial_velocity_max;
uniform float linear_accel_min;
uniform float linear_accel_max;
uniform float radial_accel_min;
uniform float radial_accel_max;
uniform float tangent_accel_min;
uniform float tangent_accel_max;
uniform float damping_min;
uniform float damping_max;
uniform float initial_angle_min;
uniform float initial_angle_max;
uniform float scale_min;
uniform float scale_max;
uniform float hue_variation_min;
uniform float hue_variation_max;
uniform float anim_speed_min;
uniform float anim_speed_max;
uniform float anim_offset_min;
uniform float anim_offset_max;
uniform float lifetime_randomness;
uniform vec3 emission_shape_offset = vec3(0.);
uniform vec3 emission_shape_scale = vec3(1.);
uniform vec3 velocity_pivot = vec3(0.);
uniform vec4 color_value : source_color;
uniform vec3 gravity;
uniform sampler2D scale_curve : repeat_disable;
uniform sampler2D directional_velocity_curve: repeat_disable;
vec4 rotate_hue(vec4 current_color, float hue_rot_angle){
	float hue_rot_c = cos(hue_rot_angle);
	float hue_rot_s = sin(hue_rot_angle);
	mat4 hue_rot_mat = mat4(vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.000, 0.000, 0.000, 1.0)) +
		mat4(vec4(0.701, -0.587, -0.114, 0.0),
			vec4(-0.299, 0.413, -0.114, 0.0),
			vec4(-0.300, -0.588, 0.886, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_c +
		mat4(vec4(0.168, 0.330, -0.497, 0.0),
			vec4(-0.328, 0.035,  0.292, 0.0),
			vec4(1.250, -1.050, -0.203, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_s;
	return hue_rot_mat * current_color;
}


float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

struct DisplayParameters{
	vec3 scale;
	float hue_rotation;
	float animation_speed;
	float animation_offset;
	float lifetime;
	vec4 color;
};

struct DynamicsParameters{
	float angle;
	float angular_velocity;
	float initial_velocity_multiplier;
	float directional_velocity;
	float radial_velocity;
	float orbit_velocity;
};
struct PhysicalParameters{
	float linear_accel;
	float radial_accel;
	float tangent_accel;
	float damping;
};

void calculate_initial_physical_params(inout PhysicalParameters params, inout uint alt_seed){
	params.linear_accel = mix(linear_accel_min, linear_accel_max, rand_from_seed(alt_seed));
	params.radial_accel = mix(radial_accel_min, radial_accel_max, rand_from_seed(alt_seed));
	params.tangent_accel = mix(tangent_accel_min, tangent_accel_max, rand_from_seed(alt_seed));
	params.damping = mix(damping_min, damping_max, rand_from_seed(alt_seed));
}

void calculate_initial_dynamics_params(inout DynamicsParameters params,inout uint alt_seed){
	// -------------------- DO NOT REORDER OPERATIONS, IT BREAKS VISUAL COMPATIBILITY
	// -------------------- ADD NEW OPERATIONS AT THE BOTTOM
	params.angle = mix(initial_angle_min, initial_angle_max, rand_from_seed(alt_seed));
	params.angular_velocity = mix(angular_velocity_min, angular_velocity_max, rand_from_seed(alt_seed));
	params.initial_velocity_multiplier = mix(initial_linear_velocity_min, initial_linear_velocity_max,rand_from_seed(alt_seed));
	params.directional_velocity = mix(directional_velocity_min, directional_velocity_max,rand_from_seed(alt_seed));
	params.radial_velocity = mix(radial_velocity_min, radial_velocity_max,rand_from_seed(alt_seed));
	params.orbit_velocity = mix(orbit_velocity_min, orbit_velocity_max,rand_from_seed(alt_seed));
}
void calculate_initial_display_params(inout DisplayParameters params,inout uint alt_seed){
	// -------------------- DO NOT REORDER OPERATIONS, IT BREAKS VISUAL COMPATIBILITY
	// -------------------- ADD NEW OPERATIONS AT THE BOTTOM
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;
   params.scale = vec3(mix(scale_min, scale_max, rand_from_seed(alt_seed)));
   params.scale = sign(params.scale) * max(abs(params.scale), 0.001);
	params.hue_rotation =  pi * 2.0 * mix(hue_variation_min, hue_variation_max, rand_from_seed(alt_seed));
	params.animation_speed = mix(anim_speed_min, anim_speed_max, rand_from_seed(alt_seed));
	params.animation_offset = mix(anim_offset_min, anim_offset_max, rand_from_seed(alt_seed));
	params.lifetime = (1.0 - lifetime_randomness * rand_from_seed(alt_seed));
	params.color = color_value;
}
void process_display_param(inout DisplayParameters parameters, float lifetime){
	// compile-time add textures
	parameters.scale *= texture(scale_curve, vec2(lifetime)).rgb;
	parameters.color = rotate_hue(parameters.color, parameters.hue_rotation);
}
vec3 calculate_initial_position(inout uint alt_seed) {
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;
	vec3 pos = vec3(0.);
	 pos = vec3(0.);
	return pos * emission_shape_scale + emission_shape_offset;
}

vec3 get_random_direction_from_spread(in uint alt_seed, float spread_angle){
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;
	vec3 velocity = vec3(0.);
	float spread_rad = spread_angle * degree_to_rad;
	float angle1_rad = /*rand_from_seed_m1_p1(alt_seed)*/float(alt_seed) * (45. * degree_to_rad);
	float angle2_rad = /*rand_from_seed_m1_p1(alt_seed)*/0.;
	vec3 direction_xz = vec3(sin(angle1_rad), 0.0, cos(angle1_rad));
	vec3 direction_yz = vec3(0.0, sin(angle2_rad), cos(angle2_rad));
	direction_yz.z = direction_yz.z / max(0.0001,sqrt(abs(direction_yz.z))); // better uniform distribution
	vec3 spread_direction = vec3(direction_xz.x * direction_yz.z, direction_yz.y, direction_xz.z * direction_yz.z);
	vec3 direction_nrm = length(direction) > 0.0 ? normalize(direction) : vec3(0.0, 0.0, 1.0);
	// rotate spread to direction
	vec3 binormal = cross(vec3(0.0, 1.0, 0.0), direction_nrm);
	if (length(binormal) < 0.0001) {
		// direction is parallel to Y. Choose Z as the binormal.
		binormal = vec3(0.0, 0.0, 1.0);
	}
	binormal = normalize(binormal);
	vec3 normal = cross(binormal, direction_nrm);
	spread_direction = binormal * spread_direction.x + normal * spread_direction.y + direction_nrm * spread_direction.z;
	return spread_direction;
}
vec3 process_radial_displacement(DynamicsParameters param, float lifetime, inout uint alt_seed, mat4 transform, mat4 emission_transform, float delta){
	vec3 radial_displacement = vec3(0.0);
	if (delta < 0.001){
		return radial_displacement;
	}
	float radial_displacement_multiplier = 1.0;
	vec3 global_pivot = (emission_transform * vec4(velocity_pivot, 1.0)).xyz;
	if(length(transform[3].xyz - global_pivot) > 0.01){
		radial_displacement = normalize(transform[3].xyz - global_pivot) * radial_displacement_multiplier * param.radial_velocity;
	}else{radial_displacement = get_random_direction_from_spread(alt_seed, 360.0)* param.radial_velocity;} 
	if (radial_displacement_multiplier * param.radial_velocity < 0.0){
 // Prevent inwards velocity to flicker once the point is reached.		if (length(radial_displacement) > 0.01){
		radial_displacement = normalize(radial_displacement) * min(abs((radial_displacement_multiplier * param.radial_velocity)), length(transform[3].xyz - global_pivot) / delta);
		}
	
	return radial_displacement;
}
vec3 process_directional_displacement(DynamicsParameters param, float lifetime_percent,mat4 transform, mat4 emission_transform){
	vec3 displacement = vec3(0.);
		displacement = texture(directional_velocity_curve, vec2(lifetime_percent)).xyz * param.directional_velocity;
	return displacement;
}

void process_physical_parameters(inout PhysicalParameters params, float lifetime_percent){
	
}

void start() {
	uint base_number = NUMBER;
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DisplayParameters params;
	calculate_initial_display_params(params, alt_seed);
	// reset alt seed?
	// alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DynamicsParameters dynamic_params;
	calculate_initial_dynamics_params(dynamic_params, alt_seed);
	PhysicalParameters physics_params;
	calculate_initial_physical_params(physics_params, alt_seed);
   process_display_param(params, 0.0);
	if (rand_from_seed(alt_seed) > AMOUNT_RATIO) {
		ACTIVE = false;
	}
	
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;
	
	if (RESTART_CUSTOM){
		CUSTOM = vec4(0.);
		CUSTOM.w = params.lifetime;
		CUSTOM.x = dynamic_params.angle;
	}
	if (RESTART_COLOR){
		COLOR = params.color;
	}
	if (RESTART_ROT_SCALE) {
		TRANSFORM[0].xyz = vec3(1.0, 0.0, 0.0);
		TRANSFORM[1].xyz = vec3(0.0, 1.0, 0.0);
		TRANSFORM[2].xyz = vec3(0.0, 0.0, 1.0);
	}

	if (RESTART_POSITION) {
		TRANSFORM[3].xyz = calculate_initial_position(alt_seed);
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		}
	if (RESTART_VELOCITY) {
		VELOCITY = get_random_direction_from_spread(INDEX, spread) * dynamic_params.initial_velocity_multiplier;
		}
	process_display_param(params, 0.);
//	process_dynamic_parameters(dynamic_params, 0., alt_seed, TRANSFORM, EMISSION_TRANSFORM, DELTA);
	VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
	VELOCITY += EMITTER_VELOCITY * inherit_emitter_velocity_ratio;
}

void process() {
	uint base_number = NUMBER;
//	if (repeatable){
//		base_number = INDEX;
//	}
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	DisplayParameters params;
	calculate_initial_display_params(params, alt_seed);
	DynamicsParameters dynamic_params;
	calculate_initial_dynamics_params(dynamic_params, alt_seed);
	PhysicalParameters physics_params;
	calculate_initial_physical_params(physics_params, alt_seed);
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;

	CUSTOM.y += DELTA / LIFETIME;
	CUSTOM.y = mix(CUSTOM.y, 1.0, INTERPOLATE_TO_END);
	float lifetime_percent = CUSTOM.y/ params.lifetime;
	if (CUSTOM.y > CUSTOM.w) {
		ACTIVE = false;
	}
	
	
	
	// will use this later to calculate final displacement and orient the particle.
	vec3 starting_position = TRANSFORM[3].xyz;
	vec3 controlled_displacement = vec3(0.0);
	
//	VELOCITY += process_physics_parameters(dynamic_params, lifetime_percent, alt_seed, TRANSFORM, EMISSION_TRANSFORM, DELTA);
	
	// calculate all velocity
	
	controlled_displacement += process_radial_displacement(dynamic_params, lifetime_percent, alt_seed, TRANSFORM, EMISSION_TRANSFORM, DELTA);
	
	controlled_displacement += process_directional_displacement(dynamic_params, lifetime_percent, TRANSFORM, EMISSION_TRANSFORM);
	
	process_physical_parameters(physics_params, lifetime_percent);
	vec3 force;
	{
		// copied from previous version
		vec3 pos = TRANSFORM[3].xyz;
		force = gravity;
		// apply linear acceleration
		force += length(VELOCITY) > 0.0 ? normalize(VELOCITY) * physics_params.linear_accel : vec3(0.0);
		// apply radial acceleration
		vec3 org = EMISSION_TRANSFORM[3].xyz;
		vec3 diff = pos - org;
		force += length(diff) > 0.0 ? normalize(diff) * physics_params.radial_accel : vec3(0.0);
		// apply tangential acceleration;
		float tangent_accel_val = physics_params.tangent_accel;
		vec3 crossDiff = cross(normalize(diff), normalize(gravity));
		force += length(crossDiff) > 0.0 ? normalize(crossDiff) * tangent_accel_val : vec3(0.0);
		force += ATTRACTOR_FORCE;

		// apply attractor forces
		VELOCITY += force * DELTA;
	}
	{
		// copied from previous version
		if (physics_params.damping > 0.0) {
			float v = length(VELOCITY);
			v -= physics_params.damping * DELTA;
			if (v < 0.0) {
				VELOCITY = vec3(0.0);
			} else {
				VELOCITY = normalize(VELOCITY) * v;
			}
		}
		
	}
	
	
	// turbulence before limiting
	vec3 final_velocity = controlled_displacement + VELOCITY;
	
	// limit velocity
	
	TRANSFORM[3].xyz += final_velocity * DELTA;
	
	
	process_display_param(params, lifetime_percent);
	
	float base_angle = dynamic_params.angle;
	base_angle += CUSTOM.y * LIFETIME * dynamic_params.angular_velocity;
	CUSTOM.x = base_angle * degree_to_rad;
   COLOR = params.color;
	TRANSFORM[0].xyz = normalize(TRANSFORM[0].xyz);
	TRANSFORM[1].xyz = normalize(TRANSFORM[1].xyz);
	TRANSFORM[2].xyz = normalize(TRANSFORM[2].xyz);
//	params.scale *= length(final_velocity)/100.0;

	TRANSFORM[0].xyz *= sign(params.scale.x) * max(abs(params.scale.x), 0.001);
	TRANSFORM[1].xyz *= sign(params.scale.y) * max(abs(params.scale.y), 0.001);
	TRANSFORM[2].xyz *= sign(params.scale.z) * max(abs(params.scale.z), 0.001);
	
	// 
	CUSTOM.z = params.animation_offset + lifetime_percent * params.animation_speed;
	
	if (CUSTOM.y > CUSTOM.w) {
		ACTIVE = false;
	}
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2vkm5"]
shader = SubResource("Shader_s032g")
shader_parameter/direction = Vector3(0, 0, 0)
shader_parameter/spread = 180.0
shader_parameter/flatness = 1.0
shader_parameter/inherit_emitter_velocity_ratio = 0.0
shader_parameter/initial_linear_velocity_min = 4.0
shader_parameter/initial_linear_velocity_max = 4.0
shader_parameter/directional_velocity_min = 1.0
shader_parameter/directional_velocity_max = 1.0
shader_parameter/angular_velocity_min = 0.0
shader_parameter/angular_velocity_max = 0.0
shader_parameter/orbit_velocity_min = 0.0
shader_parameter/orbit_velocity_max = 0.0
shader_parameter/radial_velocity_min = null
shader_parameter/radial_velocity_max = null
shader_parameter/linear_accel_min = -7.0
shader_parameter/linear_accel_max = -7.0
shader_parameter/radial_accel_min = 0.0
shader_parameter/radial_accel_max = 0.0
shader_parameter/tangent_accel_min = 0.0
shader_parameter/tangent_accel_max = 0.0
shader_parameter/damping_min = 0.0
shader_parameter/damping_max = 0.0
shader_parameter/initial_angle_min = -180.0
shader_parameter/initial_angle_max = 180.0
shader_parameter/scale_min = 1.0
shader_parameter/scale_max = 1.0
shader_parameter/hue_variation_min = 0.0
shader_parameter/hue_variation_max = 0.0
shader_parameter/anim_speed_min = 0.0
shader_parameter/anim_speed_max = 0.0
shader_parameter/anim_offset_min = 0.0
shader_parameter/anim_offset_max = 0.0
shader_parameter/lifetime_randomness = 0.0
shader_parameter/emission_shape_offset = Vector3(0, 0, 0)
shader_parameter/emission_shape_scale = Vector3(1, 1, 1)
shader_parameter/velocity_pivot = Vector3(0, 0, 0)
shader_parameter/color_value = Color(1, 1, 1, 1)
shader_parameter/gravity = Vector3(0, -9.81, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fnpb2"]
transparency = 1
blend_mode = 1
shading_mode = 0
albedo_texture = ExtResource("8_sly4x")
billboard_mode = 3
billboard_keep_scale = true
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false
grow = true

[sub_resource type="QuadMesh" id="QuadMesh_m0f6f"]
material = SubResource("StandardMaterial3D_fnpb2")
size = Vector2(0.3, 0.3)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_qmoml"]
bg_color = Color(0.12549, 0.160784, 0.258824, 1)
corner_radius_top_left = 50
corner_radius_top_right = 50
corner_radius_bottom_right = 50
corner_radius_bottom_left = 50

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_2q56b"]
bg_color = Color(0.458824, 0.458824, 0.458824, 1)
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
border_color = Color(0.611765, 0.611765, 0.611765, 1)
corner_radius_top_left = 25
corner_radius_top_right = 25
corner_radius_bottom_right = 25
corner_radius_bottom_left = 25

[sub_resource type="LabelSettings" id="LabelSettings_8467r"]
font_size = 32

[sub_resource type="GDScript" id="GDScript_4llql"]
resource_name = "ZoomAnimButton"
script/source = "extends Button

func _pressed():
	%\"KatamariCamera/KatamariCameraZoom\".play(\"CameraZoom\")
"

[sub_resource type="ViewportTexture" id="ViewportTexture_g5e0a"]
viewport_path = NodePath("SubViewportFeedback")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_d1i5w"]
resource_local_to_scene = true
shader = ExtResource("6_rnc8v")
shader_parameter/zoom_amount = 0.0
shader_parameter/fade = 0.0
shader_parameter/FX_opacity = 0.0
shader_parameter/FX_zoom = 1.098
shader_parameter/FX_overlay = SubResource("ViewportTexture_g5e0a")

[sub_resource type="ViewportTexture" id="ViewportTexture_l3wab"]
viewport_path = NodePath("SubViewport")

[sub_resource type="Environment" id="Environment_d2jpm"]
ambient_light_source = 2
ambient_light_color = Color(1, 1, 1, 1)

[sub_resource type="World3D" id="World3D_kidyq"]
environment = SubResource("Environment_d2jpm")

[sub_resource type="AnimationNodeTimeScale" id="AnimationNodeTimeScale_7b822"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_pqmwy"]
animation = &"Ouji_Idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_1gu1e"]
animation = &"Ouji_Roll_Backward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_6t0l6"]
animation = &"Ouji_Roll_Forward"

[sub_resource type="AnimationNodeAdd2" id="AnimationNodeAdd2_56pxy"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_grhpb"]
animation = &"Internal_OujiRootTurn"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_tvb7u"]
graph_offset = Vector2(-229.584, -160)
nodes/Forward/node = SubResource("AnimationNodeAnimation_6t0l6")
nodes/Forward/position = Vector2(-40, 140)
nodes/OujiForwardAdd/node = SubResource("AnimationNodeAdd2_56pxy")
nodes/OujiForwardAdd/position = Vector2(180, 180)
nodes/Turn/node = SubResource("AnimationNodeAnimation_grhpb")
nodes/Turn/position = Vector2(-100, 320)
nodes/output/position = Vector2(380, 180)
node_connections = [&"OujiForwardAdd", 0, &"Forward", &"OujiForwardAdd", 1, &"Turn", &"output", 0, &"OujiForwardAdd"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_33bl7"]
animation = &"Ouji_Roll_Left"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_ipqxi"]
animation = &"Ouji_Roll_Right"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_cxbke"]
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x >= 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_r0gw6"]
advance_mode = 2
advance_condition = &"backward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_vy1ni"]
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x < 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_tywnn"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x >= 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_gafef"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"backward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_addj7"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x < 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_nyvk3"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"backward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_7c1fb"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x < 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_y83c1"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x >= 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_mr223"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"forward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_yggki"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"backward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_ckqgm"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"forward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_il8yv"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x >= 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_rx1eu"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"forward_condition"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_xk25a"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"side_condition"
advance_expression = "StickMidpoint.x < 0"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_xny26"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"forward_condition"

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_a1aq2"]
states/Backward/node = SubResource("AnimationNodeAnimation_1gu1e")
states/Backward/position = Vector2(606, 579)
states/End/position = Vector2(1074, 47)
states/Forward/node = SubResource("AnimationNodeBlendTree_tvb7u")
states/Forward/position = Vector2(594, 54.0366)
states/Left/node = SubResource("AnimationNodeAnimation_33bl7")
states/Left/position = Vector2(260, 358)
states/Right/node = SubResource("AnimationNodeAnimation_ipqxi")
states/Right/position = Vector2(953, 345)
states/Start/position = Vector2(699, 422)
transitions = ["Start", "Right", SubResource("AnimationNodeStateMachineTransition_cxbke"), "Start", "Backward", SubResource("AnimationNodeStateMachineTransition_r0gw6"), "Start", "Left", SubResource("AnimationNodeStateMachineTransition_vy1ni"), "Backward", "Right", SubResource("AnimationNodeStateMachineTransition_tywnn"), "Right", "Backward", SubResource("AnimationNodeStateMachineTransition_gafef"), "Backward", "Left", SubResource("AnimationNodeStateMachineTransition_addj7"), "Left", "Backward", SubResource("AnimationNodeStateMachineTransition_nyvk3"), "Right", "Left", SubResource("AnimationNodeStateMachineTransition_7c1fb"), "Left", "Right", SubResource("AnimationNodeStateMachineTransition_y83c1"), "Start", "Forward", SubResource("AnimationNodeStateMachineTransition_mr223"), "Forward", "Backward", SubResource("AnimationNodeStateMachineTransition_yggki"), "Backward", "Forward", SubResource("AnimationNodeStateMachineTransition_ckqgm"), "Forward", "Right", SubResource("AnimationNodeStateMachineTransition_il8yv"), "Right", "Forward", SubResource("AnimationNodeStateMachineTransition_rx1eu"), "Forward", "Left", SubResource("AnimationNodeStateMachineTransition_xk25a"), "Left", "Forward", SubResource("AnimationNodeStateMachineTransition_xny26")]
graph_offset = Vector2(0, -134.963)

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_5v8t0"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_m8qfg"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"walk_speed_reached"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_27yf4"]
xfade_time = 0.2
advance_mode = 2
advance_condition = &"idle_speed_reached"

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_lygbi"]
states/Ouji_Idle/node = SubResource("AnimationNodeAnimation_pqmwy")
states/Ouji_Idle/position = Vector2(312, 100)
states/Ouji_Walk/node = SubResource("AnimationNodeStateMachine_a1aq2")
states/Ouji_Walk/position = Vector2(518.047, 100)
transitions = ["Start", "Ouji_Idle", SubResource("AnimationNodeStateMachineTransition_5v8t0"), "Ouji_Idle", "Ouji_Walk", SubResource("AnimationNodeStateMachineTransition_m8qfg"), "Ouji_Walk", "Ouji_Idle", SubResource("AnimationNodeStateMachineTransition_27yf4")]
graph_offset = Vector2(93.0474, 0)

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_5ly86"]
nodes/MovementScale/node = SubResource("AnimationNodeTimeScale_7b822")
nodes/MovementScale/position = Vector2(620, 60)
nodes/WalkState/node = SubResource("AnimationNodeStateMachine_lygbi")
nodes/WalkState/position = Vector2(400, 100)
nodes/output/position = Vector2(780, 60)
node_connections = [&"MovementScale", 0, &"WalkState", &"output", 0, &"MovementScale"]

[node name="KatamariControllable" type="Node3D"]
editor_description = "An inherited scene for a player-controlled katamari. Only one should exist per-viewport; any more can cause issues with multiple active cameras."
script = ExtResource("1_k6077")
InclineSpeedMultiplier = ExtResource("2_dth00")

[node name="SubViewport" type="SubViewport" parent="."]
size = Vector2i(853, 480)

[node name="KatamariCameraPivot" type="Node3D" parent="SubViewport"]
unique_name_in_owner = true
process_mode = 3
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)

[node name="KatamariCamera" type="Camera3D" parent="SubViewport/KatamariCameraPivot"]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2)
cull_mask = 786431
attributes = SubResource("CameraAttributesPractical_qviqp")
current = true

[node name="KatamariCameraZoom" type="AnimationPlayer" parent="SubViewport/KatamariCameraPivot/KatamariCamera"]
libraries = {
"": SubResource("AnimationLibrary_hdva6")
}

[node name="SubViewportFeedback" type="SubViewport" parent="."]
size = Vector2i(959, 356)
render_target_update_mode = 4
script = ExtResource("4_ujqm4")

[node name="KatamariBody" type="RigidBody3D" parent="."]
process_mode = 1
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
collision_mask = 32771
input_ray_pickable = false
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
physics_material_override = SubResource("PhysicsMaterial_tecj2")
center_of_mass_mode = 1
center_of_mass = Vector3(0, -1, 0)
can_sleep = false
lock_rotation = true
continuous_cd = true
max_contacts_reported = 4
contact_monitor = true
linear_damp_mode = 1
linear_damp = 1.1

[node name="KatamariMeshPivot" type="Node3D" parent="KatamariBody"]

[node name="KatamariMesh" type="MeshInstance3D" parent="KatamariBody/KatamariMeshPivot"]
transform = Transform3D(1.125, 0, 0, 0, 1.125, 0, 0, 0, 1.125, 0, 0, 0)
material_override = SubResource("StandardMaterial3D_xaky2")
mesh = ExtResource("5_mqsmu")
skeleton = NodePath("../../../..")

[node name="KatamariBaseCollision" type="CollisionShape3D" parent="KatamariBody"]
shape = SubResource("SphereShape3D_5e5bl")

[node name="KatamariDashEfPivot" type="Node3D" parent="KatamariBody"]
unique_name_in_owner = true
transform = Transform3D(-4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0, 1, 0, 0, 0)

[node name="KatamariDashEfA" type="MeshInstance3D" parent="KatamariBody/KatamariDashEfPivot"]
material_override = SubResource("StandardMaterial3D_7w1i5")
mesh = SubResource("SphereMesh_78fgn")

[node name="KatamariDashEfB" type="MeshInstance3D" parent="KatamariBody/KatamariDashEfPivot"]
material_override = SubResource("StandardMaterial3D_0uvt6")
mesh = SubResource("SphereMesh_78fgn")

[node name="FloorBumpDetect" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.3, 0)
collision_layer = 0
collision_mask = 32770

[node name="FloorBumpCollide" type="CollisionShape3D" parent="FloorBumpDetect"]
shape = SubResource("SphereShape3D_qrq08")

[node name="GPUParticles3D" type="GPUParticles3D" parent="FloorBumpDetect/FloorBumpCollide"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.3, 0)
emitting = false
lifetime = 0.5
one_shot = true
explosiveness = 1.0
process_material = SubResource("ShaderMaterial_2vkm5")
draw_pass_1 = SubResource("QuadMesh_m0f6f")

[node name="WallBumpDetect" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.3, 0)
collision_layer = 0
collision_mask = 32770

[node name="WallBumpCollide" type="CollisionShape3D" parent="WallBumpDetect"]
shape = SubResource("SphereShape3D_qrq08")

[node name="Debug" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="StickDisplay" type="Control" parent="Debug"]
layout_mode = 1
anchor_left = 0.5
anchor_top = 0.98
anchor_right = 0.5
anchor_bottom = 0.98
offset_left = -100.0
offset_top = -100.0
offset_right = 100.0

[node name="PanelL" type="Panel" parent="Debug/StickDisplay"]
layout_mode = 1
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_top = -100.0
offset_right = 100.0
grow_vertical = 0
theme_override_styles/panel = SubResource("StyleBoxFlat_qmoml")

[node name="StickL" type="Panel" parent="Debug/StickDisplay/PanelL"]
z_index = 2
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -25.0
offset_top = -25.0
offset_right = 25.0
offset_bottom = 25.0
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_2q56b")

[node name="PanelR" type="Panel" parent="Debug/StickDisplay"]
layout_mode = 1
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -100.0
offset_top = -100.0
grow_horizontal = 0
grow_vertical = 0
theme_override_styles/panel = SubResource("StyleBoxFlat_qmoml")

[node name="StickR" type="Panel" parent="Debug/StickDisplay/PanelR"]
z_index = 2
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -25.0
offset_top = -25.0
offset_right = 25.0
offset_bottom = 25.0
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_2q56b")

[node name="Line2D" type="Line2D" parent="Debug/StickDisplay"]
points = PackedVector2Array(50, 50, 150, 50)
width = 5.0
antialiased = true

[node name="StickM" type="Panel" parent="Debug/StickDisplay"]
z_index = 3
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -5.0
offset_top = -3.0
offset_right = 4.99999
offset_bottom = 7.0
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_2q56b")

[node name="Label" type="Label" parent="Debug/StickDisplay"]
layout_mode = 1
anchors_preset = -1
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_left = -140.0
offset_top = -50.0
offset_right = -104.0
offset_bottom = -5.0
grow_horizontal = 0
grow_vertical = 2
rotation = 1.5708
pivot_offset = Vector2(40, 22)
text = "<="
label_settings = SubResource("LabelSettings_8467r")
horizontal_alignment = 2
vertical_alignment = 1

[node name="Label2" type="Label" parent="Debug/StickDisplay"]
layout_mode = 0
offset_left = 224.0
offset_top = 30.6
offset_right = 499.0
offset_bottom = 75.6
pivot_offset = Vector2(40, 22)
text = "a: XXrad (XXdeg)"
label_settings = SubResource("LabelSettings_8467r")
vertical_alignment = 1

[node name="ProgressBar" type="ProgressBar" parent="Debug/StickDisplay"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = 124.0
offset_top = -136.4
offset_right = 451.0
offset_bottom = -79.4
grow_horizontal = 2
grow_vertical = 0
theme_override_font_sizes/font_size = 38

[node name="Button" type="Button" parent="Debug/StickDisplay"]
layout_mode = 1
anchors_preset = -1
anchor_left = -0.1
anchor_top = 0.5
anchor_right = -0.1
anchor_bottom = 0.5
offset_left = -134.0
offset_bottom = 31.0
grow_horizontal = 0
focus_mode = 0
text = "Play Zoom Anim"
script = SubResource("GDScript_4llql")

[node name="Label3" type="Label" parent="Debug"]
layout_mode = 1
anchors_preset = -1
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 32.0
offset_top = -365.0
offset_right = 307.0
offset_bottom = -32.0
grow_vertical = 0
pivot_offset = Vector2(40, 22)
text = "x:
y:
z:
Vx: 
Vy: 
Vz:
Vr:"
label_settings = SubResource("LabelSettings_8467r")
vertical_alignment = 2

[node name="Label4" type="Label" parent="Debug"]
layout_mode = 1
anchors_preset = -1
offset_left = 32.0
offset_top = 32.0
offset_right = 307.0
offset_bottom = 125.0
pivot_offset = Vector2(40, 22)
text = "size: 
damp:"
label_settings = SubResource("LabelSettings_8467r")

[node name="KatamariZoomAudio" type="AudioStreamPlayer" parent="."]
unique_name_in_owner = true
bus = &"SFX"

[node name="KatamariQTAudio" type="AudioStreamPlayer" parent="."]
bus = &"SFX"

[node name="KatamariDashAudio" type="AudioStreamPlayer" parent="."]
bus = &"SFX"

[node name="ViewportRect" type="TextureRect" parent="."]
unique_name_in_owner = true
z_index = -10
material = SubResource("ShaderMaterial_d1i5w")
clip_contents = true
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
texture = SubResource("ViewportTexture_l3wab")

[node name="OujiView" type="TextureRect" parent="."]
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -384.0
offset_top = -384.0
grow_horizontal = 0
grow_vertical = 0
texture = ExtResource("8_un6lr")

[node name="SubViewportContainer" type="SubViewportContainer" parent="."]
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -640.0
offset_top = -1080.0
grow_horizontal = 0
grow_vertical = 0
stretch = true

[node name="SubViewport" type="SubViewport" parent="SubViewportContainer"]
own_world_3d = true
world_3d = SubResource("World3D_kidyq")
transparent_bg = true
handle_input_locally = false
size = Vector2i(640, 1080)
render_target_update_mode = 4

[node name="Ouji" parent="SubViewportContainer/SubViewport" instance=ExtResource("9_uov0o")]
transform = Transform3D(0.05, 0, 0, 0, 0.05, 0, 0, 0, 0.05, 0.05, -0.99, -1.51)

[node name="Camera3D" type="Camera3D" parent="SubViewportContainer/SubViewport"]
transform = Transform3D(0.848048, 0.0369653, 0.528628, 0, 0.997564, -0.0697565, -0.529919, 0.0591568, 0.845982, 1.915, 0.17, 2.415)
fov = 41.0

[node name="OujiAnimTree" type="AnimationTree" parent="SubViewportContainer/SubViewport"]
unique_name_in_owner = true
active = false
root_node = NodePath("%OujiAnimTree/../Ouji")
libraries = {
"": ExtResource("10_li762")
}
tree_root = SubResource("AnimationNodeBlendTree_5ly86")
advance_expression_base_node = NodePath("../../..")
anim_player = NodePath("../Ouji/OujiAnimation")
parameters/MovementScale/scale = 1.0
parameters/WalkState/conditions/idle_speed_reached = false
parameters/WalkState/conditions/walk_speed_reached = false
parameters/WalkState/Ouji_Walk/conditions/backward_condition = false
parameters/WalkState/Ouji_Walk/conditions/forward_condition = false
parameters/WalkState/Ouji_Walk/conditions/side_condition = false
parameters/WalkState/Ouji_Walk/Forward/OujiForwardAdd/add_amount = 0

[connection signal="body_entered" from="FloorBumpDetect" to="." method="_on_floor_bump"]
[connection signal="body_entered" from="WallBumpDetect" to="." method="_on_wall_bump"]
